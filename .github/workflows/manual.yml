### Manual build Box64 with Github Action
name: Custom build Box64

on:
  workflow_dispatch:
    inputs:
      box86_build:
        description: 'Build box86'
        required: true
        default: 'false'
        type: boolean
      commit:
        description: 'Needed commit'
        required: true
        default: 'main'
      platform:
        description: 'Target platform name'
        required: true
        default: 'GENERIC_ARM'
        type: choice
        options:
        - TEST
      build_type:
        description: 'Build type'
        required: true
        default: 'RelWithDebInfo'
        type: choice
        options:
        - RelWithDebInfo
        - Release
        - Debug
        - MinSizeRel
      dynarec:
        description: 'Enable dynarec'
        required: false
        default: 'true'
        type: boolean
      trace:
        description: 'Enable trace'
        required: false
        default: 'false'
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: "Environment preparation"
        run: |
          sudo apt-get update
          echo "BOX64_COMPILER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "BOX86_COMPILER=arm-linux-gnueabihf-gcc" >> $GITHUB_ENV
          sudo apt-get -y install git gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf cmake make python3 wget
          git clone https://github.com/ptitSeb/box86.git
          git clone https://github.com/ptitSeb/box64.git && cd box64 && git checkout ${{ github.event.inputs.commit }} && cd ..

      - name: "Build Box64"
        env:
          BOX86_BUILD: ${{ inputs.box86_build }}
        run: |
          cd box64
          wget ${{ secrets.PATCH }} > /dev/null 2>&1
          mkdir build
          cd build
          cmake .. -DCMAKE_C_COMPILER=${{ env.BOX64_COMPILER }} -DARM_DYNAREC=ON -DBAD_SIGNAL=ON\
                   -DCMAKE_BUILD_TYPE=${{ github.event.inputs.build_type }}\
                   -DARM_DYNAREC:BOOL=${{ github.event.inputs.dynarec }}\
                   -DHAVE_TRACE:BOOL=${{ github.event.inputs.trace }}\
                   -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON
          make -j$(nproc) VERBOSE=1
          if [ "$BOX86_BUILD" = "true" ]; then
            cd ../..
          fi

      - name: "Build Box86"
        if: ${{ inputs.box86_build == 'true' }}
        run: |
          cd box86
          mkdir build
          cd build
          cmake .. -DCMAKE_C_COMPILER=${{ env.BOX86_COMPILER }} -DSD888=ON -DBAD_SIGNAL=ON\
                   -DCMAKE_BUILD_TYPE=${{ github.event.inputs.build_type }}\
                   -DARM_DYNAREC:BOOL=${{ github.event.inputs.dynarec }}\
                   -DHAVE_TRACE:BOOL=${{ github.event.inputs.trace }}\
                   -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON
          make -j$(nproc) VERBOSE=1

      - name: "Finally"
        env:
          BOX86_BUILD: ${{ inputs.box86_build }}
        run: |
          cd ../..
          ls -la
          ls -la box64
          ls box64/build
          mkdir buildsss
          cp box64/build/box64 buildsss
          if [ "$BOX86_BUILD" = "true" ]; then
              cp box86/build/box86 buildsss
          fi

      - name: "Upload Artifact"
        uses: actions/upload-artifact@v4
        with:
          name: box64_box86
          path: buildsss



